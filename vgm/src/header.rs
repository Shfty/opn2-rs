use crate::{parse_ident, parse_u16, parse_u32, parse_u8};

#[derive(Debug, Default, Copy, Clone, Ord, PartialOrd, Eq, PartialEq, Hash)]
pub struct Header {
    pub ident: [char; 4],
    pub eof_offset: u32,
    pub version: u32,
    pub sn76489_clock: u32,
    pub ym2413_clock: u32,
    pub gd3_offset: u32,
    pub total_samples: u32,
    pub loop_offset: u32,
    pub loop_samples: u32,
    pub rate: u32,
    pub sn_fb: u16,
    pub snw: u8,
    pub sf: u8,
    pub ym2612_clock: u32,
    pub ym2151_clock: u32,
    pub vgm_data_offset: u32,
    pub sega_pcm_clock: u32,
    pub spcm_interface: u32,
    pub rf5c68_clock: u32,
    pub ym2203_clock: u32,
    pub ym2608_clock: u32,
    pub ym2610b_clock: u32,
    pub ym3812_clock: u32,
    pub ym3526_clock: u32,
    pub ym8950_clock: u32,
    pub ymf262_clock: u32,
    pub ymf278b_clock: u32,
    pub ymf271_clock: u32,
    pub ymz280b_clock: u32,
    pub rf5c164_clock: u32,
    pub pwm_clock: u32,
    pub ay8910_clock: u32,
    pub ayt: u8,
    pub ayt_and_flags: u32,
    pub vm: u8,
    _pad1: u8,
    pub lb: u8,
    pub lm: u8,
    pub gb_dmg_clock: u32,
    pub nes_apu_clock: u32,
    pub multi_pcm_clock: u32,
    pub upd7759_clock: u32,
    pub okim6258_clock: u32,
    pub of: u8,
    pub kf: u8,
    pub cf: u8,
    _pad2: u8,
    pub okim6295_clock: u32,
    pub k051649_clock: u32,
    pub k054539_clock: u32,
    pub huc6280_clock: u32,
    pub c140_clock: u32,
    pub k053260_clock: u32,
    pub pokey_clock: u32,
    pub qsound_clock: u32,
    pub scsp_clock: u32,
    pub extra_hdr_ofs: u32,
    pub wonderswan_clock: u32,
    pub vsu_clock: u32,
    pub saa1099_clock: u32,
    pub es5503_clock: u32,
    pub es5506_clock: u32,
    pub es_chns: u16,
    pub cd: u8,
    _pad3: u8,
    pub x1_010_clock: u32,
    pub c352_clock: u32,
    pub ga20_clock: u32,
    _pad4: [u8; 28],
}

impl From<&[u8]> for Header {
    fn from(bytes: &[u8]) -> Self {
        let mut iter = bytes.iter();
        let iter = &mut iter;

        Header {
            ident: parse_ident(iter),
            eof_offset: parse_u32(iter),
            version: parse_u32(iter),
            sn76489_clock: parse_u32(iter),
            ym2413_clock: parse_u32(iter),
            gd3_offset: parse_u32(iter),
            total_samples: parse_u32(iter),
            loop_offset: parse_u32(iter),
            loop_samples: parse_u32(iter),
            rate: parse_u32(iter),
            sn_fb: parse_u16(iter),
            snw: parse_u8(iter),
            sf: parse_u8(iter),
            ym2612_clock: parse_u32(iter),
            ym2151_clock: parse_u32(iter),
            vgm_data_offset: parse_u32(iter),
            sega_pcm_clock: parse_u32(iter),
            spcm_interface: parse_u32(iter),
            rf5c68_clock: parse_u32(iter),
            ym2203_clock: parse_u32(iter),
            ym2608_clock: parse_u32(iter),
            ym2610b_clock: parse_u32(iter),
            ym3812_clock: parse_u32(iter),
            ym3526_clock: parse_u32(iter),
            ym8950_clock: parse_u32(iter),
            ymf262_clock: parse_u32(iter),
            ymf278b_clock: parse_u32(iter),
            ymf271_clock: parse_u32(iter),
            ymz280b_clock: parse_u32(iter),
            rf5c164_clock: parse_u32(iter),
            pwm_clock: parse_u32(iter),
            ay8910_clock: parse_u32(iter),
            ayt: parse_u8(iter),
            ayt_and_flags: parse_u32(iter),
            vm: parse_u8(iter),
            _pad1: parse_u8(iter),
            lb: parse_u8(iter),
            lm: parse_u8(iter),
            gb_dmg_clock: parse_u32(iter),
            nes_apu_clock: parse_u32(iter),
            multi_pcm_clock: parse_u32(iter),
            upd7759_clock: parse_u32(iter),
            okim6258_clock: parse_u32(iter),
            of: parse_u8(iter),
            kf: parse_u8(iter),
            cf: parse_u8(iter),
            _pad2: 0,
            okim6295_clock: parse_u32(iter),
            k051649_clock: parse_u32(iter),
            k054539_clock: parse_u32(iter),
            huc6280_clock: parse_u32(iter),
            c140_clock: parse_u32(iter),
            k053260_clock: parse_u32(iter),
            pokey_clock: parse_u32(iter),
            qsound_clock: parse_u32(iter),
            scsp_clock: parse_u32(iter),
            extra_hdr_ofs: parse_u32(iter),
            wonderswan_clock: parse_u32(iter),
            vsu_clock: parse_u32(iter),
            saa1099_clock: parse_u32(iter),
            es5503_clock: parse_u32(iter),
            es5506_clock: parse_u32(iter),
            es_chns: parse_u16(iter),
            cd: parse_u8(iter),
            _pad3: 0,
            x1_010_clock: parse_u32(iter),
            c352_clock: parse_u32(iter),
            ga20_clock: parse_u32(iter),
            _pad4: [0; 28],
        }
    }
}
